# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH

# Path to your Oh My Zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time Oh My Zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch $(uname -m)"

# Set personal aliases, overriding those provided by Oh My Zsh libs,
# plugins, and themes. Aliases can be placed here, though Oh My Zsh
# users are encouraged to define aliases within a top-level file in
# the $ZSH_CUSTOM folder, with .zsh extension. Examples:
# - $ZSH_CUSTOM/aliases.zsh
# - $ZSH_CUSTOM/macos.zsh
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

#cd "$HOME/spikeseed/msp/projects"

################ Email address
export BROWSER=wslview
export EMAIL_ADDRESS="nadir.arfi@outlook.com"


################ PYENV
# export PYENV_ROOT="$HOME/.pyenv"
# [[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
# eval "$(pyenv init -)"
# eval "$(pyenv virtualenv-init -)"
# # Set default global python
# pyenv global 3.11.0 

################ Brew
# alias brew=/home/linuxbrew/.linuxbrew/bin/brew

################ AWS CLI Autocompletion
autoload bashcompinit && bashcompinit
autoload -Uz compinit && compinit
complete -C "/usr/local/bin/aws_completer" aws

################ Kubectl and kubecolor completion
## https://github.com/hidetatz/kubecolor
# alias kubecolor=/home/linuxbrew/.linuxbrew/bin/kubecolor
# alias k9s=/home/linuxbrew/.linuxbrew/bin/k9s
# alias kubectl=kubecolor
# alias k=k9s
# complete -o default -F __start_kubectl k
# [[ $commands[kubectl] ]] && source <(kubectl completion zsh)
# compdef /home/linuxbrew/.linuxbrew/bin/kubecolor=kubectl

################ For OpenLens installation
# https://www.lisenet.com/2022/build-and-install-openlens-on-linux/
# also make sure FUSE is setup
# export NVM_DIR="$HOME/.nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"                   # This loads nvm
# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" # This loads nvm bash_completion
# alias open-lens="open-lens --no-sandbox --enable-features=UseOzonePlatform --ozone-platform=wayland"

################ Git WSL
# Add GIT_EXEC_PATH to WSLENV, but only if not already present
# export GIT_EXEC_PATH="$(git --exec-path)"
# if ! [[ "$WSLENV" =~ (^|:)GIT_EXEC_PATH/wp($|:) ]]; then
#     export WSLENV="${WSLENV+$WSLENV:}GIT_EXEC_PATH/wp"
# fi

BASE_DIRECTORY="/home/nadirarfi"

################ Aliases
alias aws-sso-login="aws sso login --profile"
alias tf="terraform"
alias tg="terragrunt"

alias glog="git log --oneline"
alias gadd="git add"
alias gdiff="git diff"
alias grebase="git rebase"
alias gpull="git pull"
alias gbranch="git branch"
alias gcheckout="git checkout"
alias gdesc="git describe"
alias gstash="git stash"
alias gcommit="git commit -m"
alias gpush="git push"
alias gpushf="git push -f"
alias gstatus="git status"
alias gshow="git show"

## Edit zshrc
alias zsh-config="vi ~/.zshrc"
alias zsh-source="source ~/.zshrc"

## VS-Code Profile
alias code="code --profile nadirarfi --remote wsl+Ubuntu-24.04"

## Ansible Enforcer
# alias ansible-playbook="$BASE_DIRECTORY/msp-toolkit/terminal-kit/ansible-enforcer.sh"
# alias ansible-playbook-changes="$BASE_DIRECTORY/msp-toolkit/terminal-kit/ansible-only-changes.sh"

auto_git_pull() {
    current_dir=$(pwd)
    if [ -d "$current_dir/.git" ]; then
        branch=$(git -C "$current_dir" symbolic-ref --short HEAD 2>/dev/null)
        if [ "$branch" = "main" ]; then
            echo "On main branch in $current_dir, performing git pull..."
            git -C "$current_dir" pull
        fi
    fi
}
auto_git_pull

################ ASDF global environments
asdf global python 3.11.0
asdf global terraform 1.5.6
asdf global terragrunt 0.50.4
asdf global kubectl 1.28.1
asdf global k9s 0.27.0

################ ASDF
. "$HOME/.asdf/asdf.sh"
fpath=(${ASDF_DIR}/completions $fpath)
autoload -Uz compinit && compinit
